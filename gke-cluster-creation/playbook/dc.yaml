---
- name: Create cluster
  hosts: localhost
  gather_facts: false

  # roles:
  #   - role: google.cloud.gcloud

  tasks:  

  # - name: Install bottle python package
  #   ansible.builtin.pip:
  #     name: pyyaml

  - name: create a cluster
    google.cloud.gcp_container_cluster:
      name: my-cluster
      initial_node_count: 1
      node_config:
        machine_type: n1-standard-4
        disk_size_gb: 500
      location: northamerica-northeast1-a
      project: openenv-z7ckj
      auth_kind: serviceaccount
      kubectl_context: "gk"
      kubectl_path: "./gk.yaml"
      state: present

    register: gke_cluster_artifactcluster

  # - name: debug
  #   ansible.builtin.debug:
  #     msg: "{{ lookup('ansible.builtin.template', './templates/import-cluster.yaml') }}"


  - name: Create a k8s namespace
    redhat.openshift.k8s:
      kubeconfig: "./gk.yaml"
      context: "gk"
      name: testing
      api_version: v1
      kind: Namespace
      state: present

  - name: Create a Service object from an inline definition
    redhat.openshift.k8s:
      kubeconfig: "./gk.yaml"
      context: "gk"
      state: present
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          name: web
          namespace: testing
          labels:
            app: galaxy
            service: web
        spec:
          selector:
            app: galaxy
            service: web
          ports:
            - protocol: TCP
              targetPort: 8000
              name: port-8000-tcp
              port: 8000

  # # Retrive the kubeconfig
  # - name: Retrieve kubeconfig
  #   shell: "cat gk.yaml"
  #   register: gke_kubeconfig
  #   # when: cluster_state == "present"

  # - name: Apply k8s manifests to Hub Cluster
  #   redhat.openshift.k8s:
  #     resource_definition: "{{ lookup('ansible.builtin.template', './templates/import-cluster.yaml') }}"
  #     state: present
  #   register: hub_cluster_artifact